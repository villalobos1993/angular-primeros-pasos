{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class DbzService {\n  constructor() {\n    this.characters = [{\n      id: \"1\",\n      name: \"Krillin\",\n      power: 1000\n    }, {\n      id: \"2\",\n      name: \"Goku\",\n      power: 9500\n    }, {\n      id: \"3\",\n      name: \"Vegetta\",\n      power: 8000\n    }];\n  }\n  onNewCharacter(character) {\n    this.characters.push(character);\n  }\n  onDeleteCharacter(index) {\n    this.characters.splice(index, 1);\n  }\n}\nDbzService.ɵfac = function DbzService_Factory(t) {\n  return new (t || DbzService)();\n};\nDbzService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DbzService,\n  factory: DbzService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,UAAU;EADvBC;IAEW,eAAU,GAAgB,CAAC;MAC9BC,EAAE,EAAE,GAAG;MACPC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE;KACV,EAAC;MACEF,EAAE,EAAE,GAAG;MACPC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE;KACV,EACD;MACIF,EAAE,EAAE,GAAG;MACPC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE;KACV,CACA;;EAEDC,cAAc,CAAEC,SAAoB;IAChC,IAAI,CAACC,UAAU,CAACC,IAAI,CAACF,SAAS,CAAC;EACnC;EAEAG,iBAAiB,CAAEC,KAAa;IAC5B,IAAI,CAACH,UAAU,CAACI,MAAM,CAACD,KAAK,EAAC,CAAC,CAAC;EACnC;;AAvBSV,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAY,SAAVZ,UAAU;EAAAa,YADE;AAAM","names":["DbzService","constructor","id","name","power","onNewCharacter","character","characters","push","onDeleteCharacter","index","splice","factory","providedIn"],"sourceRoot":"","sources":["/Users/alejandrovillalobostrujillo/Angular/02-bases/src/app/dbz/services/dbz.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Character } from '../interfaces/character.interface';\nimport { v4 as uuid } from 'uuid';\n\n\n\n@Injectable({providedIn: 'root'})\nexport class DbzService {\n    public characters: Character[] = [{\n        id: \"1\",\n        name: \"Krillin\",\n        power: 1000\n    },{\n        id: \"2\",\n        name: \"Goku\",\n        power: 9500\n    },\n    {\n        id: \"3\",\n        name: \"Vegetta\",\n        power: 8000\n    }\n    ];\n\n    onNewCharacter( character: Character ):void{\n        this.characters.push(character);\n    }\n\n    onDeleteCharacter( index: number){\n        this.characters.splice(index,1);\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}