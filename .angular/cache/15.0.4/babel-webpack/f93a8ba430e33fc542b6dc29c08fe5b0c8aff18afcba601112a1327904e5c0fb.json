{"ast":null,"code":"import { v4 as uuid } from 'uuid';\nimport * as i0 from \"@angular/core\";\nexport class DbzService {\n  constructor() {\n    this.characters = [{\n      id: uuid(),\n      name: \"Krillin\",\n      power: 1000\n    }, {\n      id: uuid(),\n      name: \"Goku\",\n      power: 9500\n    }, {\n      id: uuid(),\n      name: \"Vegetta\",\n      power: 8000\n    }];\n  }\n  addCharacter(character) {\n    const newcharacter = {\n      ...character,\n      id: uuid()\n    };\n    this.characters.push(character);\n  }\n  // onDeleteCharacter( index: number){\n  // this.characters.splice(index,1);\n  //}\n  deleteCharacterById(id) {\n    this.characters = this.characters.filter(character => character.id !== id);\n  }\n}\nDbzService.ɵfac = function DbzService_Factory(t) {\n  return new (t || DbzService)();\n};\nDbzService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DbzService,\n  factory: DbzService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,EAAE,IAAIC,IAAI,QAAQ,MAAM;;AAKjC,OAAM,MAAOC,UAAU;EADvBC;IAEW,eAAU,GAAgB,CAAC;MAC9BC,EAAE,EAAEH,IAAI,EAAE;MACVI,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE;KACV,EAAC;MACEF,EAAE,EAAEH,IAAI,EAAE;MACVI,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE;KACV,EACD;MACIF,EAAE,EAAEH,IAAI,EAAE;MACVI,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE;KACV,CACA;;EAEDC,YAAY,CAAEC,SAAoB;IAC9B,MAAMC,YAAY,GAAc;MAC3B,GAAGD,SAAS;MAACJ,EAAE,EAAEH,IAAI;KACzB;IACD,IAAI,CAACS,UAAU,CAACC,IAAI,CAACH,SAAS,CAAC;EACnC;EAEA;EACI;EACJ;EAEAI,mBAAmB,CAAER,EAAU;IAC7B,IAAI,CAACM,UAAU,GAAG,IAAI,CAACA,UAAU,CAACG,MAAM,CAAEL,SAAS,IAAIA,SAAS,CAACJ,EAAE,KAAKA,EAAE,CAAE;EAC9E;;AA9BSF,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAY,SAAVZ,UAAU;EAAAa,YADE;AAAM","names":["v4","uuid","DbzService","constructor","id","name","power","addCharacter","character","newcharacter","characters","push","deleteCharacterById","filter","factory","providedIn"],"sourceRoot":"","sources":["/Users/alejandrovillalobostrujillo/Angular/02-bases/src/app/dbz/services/dbz.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Character } from '../interfaces/character.interface';\nimport { v4 as uuid } from 'uuid';\n\n\n\n@Injectable({providedIn: 'root'})\nexport class DbzService {\n    public characters: Character[] = [{\n        id: uuid(),\n        name: \"Krillin\",\n        power: 1000\n    },{\n        id: uuid(),\n        name: \"Goku\",\n        power: 9500\n    },\n    {\n        id: uuid(),\n        name: \"Vegetta\",\n        power: 8000\n    }\n    ];\n\n    addCharacter( character: Character ):void{\n        const newcharacter: Character = {\n             ...character,id: uuid()\n        }\n        this.characters.push(character);\n    }\n\n    // onDeleteCharacter( index: number){\n        // this.characters.splice(index,1);\n    //}\n\n    deleteCharacterById( id: string){\n      this.characters = this.characters.filter( character => character.id !== id );\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}